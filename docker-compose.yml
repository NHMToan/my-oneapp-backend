version: "3.8"

services:
  postgresdb:
    image: postgres:latest
    restart: always
    networks:
      - shared-network
    environment:
      - POSTGRES_USER=vsguser
      - POSTGRES_PASSWORD=B7V8NwNRhLFkCY4
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    container_name: nginx-prod
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    command: /bin/sh -c "nginx -g 'daemon off;'"
    depends_on:
      api-prod:
        condition: service_healthy
    networks:
      - shared-network

  api-prod:
    container_name: vsg_api
    image: vsg-api-prod:1.0.0
    build:
      context: vsg-backend
      target: production
      dockerfile: Dockerfile
    command: sh -c './bin/wait-for -t 0 postgresdb:5432 -- yarn start'
    depends_on:
      - postgresdb
    networks:
      - shared-network
    ports:
      - 4000:9000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "http://45.32.100.27:9000"]
      interval: 5s
      timeout: 3s
      retries: 6

  app-prod:
    container_name: vsgt_app_prod
    image: vsg-app-prod:1.0.0
    build:
      context: vsg-frontend
      target: production
      dockerfile: Dockerfile
    command: yarn run start:prod
    ports:
      - 3000:3000
    networks:
      - shared-network
    restart: unless-stopped

networks:
  shared-network:

volumes:
  db-data:
